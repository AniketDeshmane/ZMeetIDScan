name: Build Android App

env:
  main_project_module: app

on:
  push:
    branches:
      - 'main'
      - 'release/**'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ZMeetIDEnv

    steps:
      - name: 1. Checkout code
        uses: actions/checkout@v4

      - name: 2. Set current date and environment variables
        run: |
          echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "repository_name=$(basename '${{ github.repository }}')" >> $GITHUB_ENV
          echo "playstore_name=$(echo '${{ github.repository }}' | sed 's/\//-/')" >> $GITHUB_ENV

      - name: 3. Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: 4. Make gradlew executable
        run: chmod +x ./gradlew

      - name: 5. Run unit tests
        run: ./gradlew test

      - name: 6. Assemble APKs and AAB
        run: |
          ./gradlew assembleDebug
          ./gradlew assembleRelease
          ./gradlew ${{ env.main_project_module }}:bundleRelease

      # === SETUP BUILD TOOLS ===
      - name: 7. Add Android build-tools to PATH
        run: |
          BUILD_TOOLS_PATH=$(find $ANDROID_HOME/build-tools -type d -name "34.*" | sort -V | tail -n 1)
          echo "Using build-tools at: $BUILD_TOOLS_PATH"
          echo "$BUILD_TOOLS_PATH" >> $GITHUB_PATH

      # === SIGNING ===
      - name: 8. Decode and save keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > my-release-key.jks

      - name: 9. Sign release APK
        run: |
          RELEASE_APK="${{ env.main_project_module }}/build/outputs/apk/release/app-release-unsigned.apk"
          SIGNED_APK="${{ env.main_project_module }}/build/outputs/apk/release/app-release-signed.apk"
          zipalign -v -p 4 "$RELEASE_APK" aligned.apk
          apksigner sign --ks my-release-key.jks \
                         --ks-key-alias "${{ secrets.KEY_ALIAS }}" \
                         --ks-pass pass:"${{ secrets.KEYSTORE_PASSWORD }}" \
                         --key-pass pass:"${{ secrets.KEY_PASSWORD }}" \
                         --out "$SIGNED_APK" aligned.apk

      # === UPLOAD ARTIFACTS ===
      - name: 10. Upload APK Debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }}-${{ env.repository_name }}-debug-apk
          path: ${{ env.main_project_module }}/build/outputs/apk/debug/

      - name: 11. Upload Signed APK Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }}-${{ env.repository_name }}-signed-release-apk
          path: ${{ env.main_project_module }}/build/outputs/apk/release/app-release-signed.apk

      - name: 12. Upload AAB Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }}-${{ env.repository_name }}-release-aab
          path: ${{ env.main_project_module }}/build/outputs/bundle/release/
